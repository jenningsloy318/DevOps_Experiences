{
    "root": {
        "data": {
            "id": "cau3ol4ylhk0",
            "created": 1619079219289,
            "text": "Network-performance-tune-principles"
        },
        "children": [
            {
                "data": {
                    "id": "cau3op40ubs0",
                    "created": 1619079227940,
                    "text": "Application",
                    "expandState": "expand",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cau3pea52hs0",
                            "created": 1619079282730,
                            "text": "网络 I/O 的角度",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau3pqbo35s0",
                                    "created": 1619079308943,
                                    "text": " I/O 多路复用技术 epoll",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau3pxui2880",
                                    "created": 1619079325319,
                                    "text": "用异步 I/O（Asynchronous I/O，AIO）",
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cau3pywpxsg0",
                            "created": 1619079327630,
                            "text": "进程的工作模型",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau3q3rzjqw0",
                                    "created": 1619079338228,
                                    "text": "主进程 + 多个 worker 子进程",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cau3q75roxk0",
                                            "created": 1619079345592,
                                            "text": "主进程负责管理网络连接，而子进程负责实际的业务处理",
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cau3qc7rt280",
                                    "created": 1619079356597,
                                    "text": "监听到相同端口的多进程模型",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cau3qg0gfnk0",
                                            "created": 1619079364861,
                                            "text": "所有进程都会监听相同接口，并且开启 SO_REUSEPORT 选项，\n由内核负责，把请求负载均衡到这些监听进程中去",
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cau3rk2fm940",
                            "created": 1619079452052,
                            "text": "应用层的网络协议优化",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau3rl187j40",
                                    "created": 1619079454156,
                                    "text": "使用长连接取代短连接，可以显著降低 TCP 建立连接的成本",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau3ros821s0",
                                    "created": 1619079462319,
                                    "text": "使用内存等方式，来缓存不常变化的数据，可以降低网络 I/O 次数，同时加快应用程序的响应速度。",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau3rxbil1s0",
                                    "created": 1619079480900,
                                    "text": "使用 Protocol Buffer 等序列化的方式，压缩网络 I/O 的数据量，可以提高应用程序的吞吐。",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau3s0nbf9k0",
                                    "created": 1619079488144,
                                    "text": "使用 DNS 缓存、预取、HTTPDNS 等方式，减少 DNS 解析的延迟，也可以提升网络 I/O 的整体速度。",
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cau3s397vg80",
                            "created": 1619079493821,
                            "text": "Socket优化",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau3s7gu94o0",
                                    "created": 1619079502989,
                                    "text": "为了提高网络的吞吐量，你通常需要调整这些缓冲区的大小",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cau3sibf8280",
                                            "created": 1619079526606,
                                            "text": "增大每个套接字的缓冲区大小 net.core.optmem_max",
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3slcfjog0",
                                            "created": 1619079533199,
                                            "text": "增大套接字接收缓冲区大小 net.core.rmem_max \n和发送缓冲区大小 net.core.wmem_max；",
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3t2b90w80",
                                            "created": 1619079570132,
                                            "text": "增大 TCP 接收缓冲区大小 net.ipv4.tcp_rmem\n发送缓冲区大小 net.ipv4.tcp_wmem",
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3td43fz40",
                                            "created": 1619079593644,
                                            "text": "增大 UDP 接收缓冲区范围net.ipv4.udp_mem",
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cau3v30giug0",
                                    "created": 1619079728384,
                                    "text": "TCP 连接设置 TCP_NODELAY 后，就可以禁用 Nagle 算法",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau3v75dbrs0",
                                    "created": 1619079737388,
                                    "text": "为 TCP 连接开启 TCP_CORK 后，可以让小包聚合成大包后再发送",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau3vaakf6o0",
                                    "created": 1619079744233,
                                    "text": "使用 SO_SNDBUF 和 SO_RCVBUF ，可以分别调整套接字发送缓冲区和接收缓冲区的大小。",
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cau3uhalehs0",
                    "created": 1619079681108,
                    "text": "传输层",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cau3vnf4pcw0",
                            "created": 1619079772807,
                            "text": "TCP"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau3wlfr5740",
                                    "created": 1619079846855,
                                    "text": "在请求数比较大的场景下，你可能会看到大量处于 TIME_WAIT 状态的连接"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cau3wn37p340",
                                            "created": 1619079850451,
                                            "text": "增大处于 TIME_WAIT 状态的连接数量 net.ipv4.tcp_max_tw_buckets ，\n并增大连接跟踪表的大小 net.netfilter.nf_conntrack_max"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3x6v65uo0",
                                            "created": 1619079893500,
                                            "text": "减小 net.ipv4.tcp_fin_timeout \nnet.netfilter.nf_conntrack_tcp_timeout_time_wait ，\n让系统尽快释放它们所占用的资源"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3xrt3lbs0",
                                            "created": 1619079939087,
                                            "text": "开启端口复用 net.ipv4.tcp_tw_reuse"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3y3w80hk0",
                                            "created": 1619079965397,
                                            "text": "增大本地端口的范围 net.ipv4.ip_local_port_range "
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3y7k3d2w0",
                                            "created": 1619079973371,
                                            "text": "增加最大文件描述符的数量  fs.nr_open 和 fs.file-max"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cau3yfnbz4o0",
                                    "created": 1619079990981,
                                    "text": "为了缓解 SYN FLOOD 等可以考虑优化与 SYN 状态相关的内核选项"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cau3ym8052w0",
                                            "created": 1619080005292,
                                            "text": "增大 TCP 半连接的最大数量 net.ipv4.tcp_max_syn_backlog ，\n或者开启 TCP SYN Cookies net.ipv4.tcp_syncookies \n（注意，这两个选项不可同时使用）"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3z5cqkcw0",
                                            "created": 1619080046937,
                                            "text": "减少 SYN_RECV 状态的连接重传 SYN+ACK 包的次数 net.ipv4.tcp_synack_retries"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cau3zc5fz1c0",
                                    "created": 1619080061733,
                                    "text": "在长连接的场景中"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cau3zghts880",
                                            "created": 1619080071189,
                                            "text": "缩短最后一次数据包到 Keepalive 探测包的间隔时间 net.ipv4.tcp_keepalive_time"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3zjes17k0",
                                            "created": 1619080077535,
                                            "text": "缩短发送 Keepalive 探测包的间隔时间 net.ipv4.tcp_keepalive_intvl；"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cau3zmqpoww0",
                                            "created": 1619080084787,
                                            "text": "减少 Keepalive 探测失败后，一直到通知应用程序前的重试次数 net.ipv4.tcp_keepalive_probes。"
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cau3voqkwe00",
                            "created": 1619079775676,
                            "text": "UDP"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau408eyo0w0",
                                    "created": 1619080131966,
                                    "text": "增大套接字缓冲区大小以及 UDP 缓冲区范围"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau40c14eoo0",
                                    "created": 1619080139836,
                                    "text": "增大本地端口号的范围；"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau40g4wt5c0",
                                    "created": 1619080148773,
                                    "text": "根据 MTU 大小，调整 UDP 数据包的大小，减少或者避免分片的发生"
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cau40ljrrl40",
                    "created": 1619080160555,
                    "text": "网络层"
                },
                "children": [
                    {
                        "data": {
                            "id": "cau40vo1n340",
                            "created": 1619080182582,
                            "text": "从路由和转发的角度出发"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau4129waxs0",
                                    "created": 1619080196963,
                                    "text": "在需要转发的服务器中，开启 IP 转发，即设置 net.ipv4.ip_forward = 1"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau418d6s0w0",
                                    "created": 1619080210223,
                                    "text": "调整数据包的生存周期 TTL，比如设置 net.ipv4.ip_default_ttl = 64"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau41duoeow0",
                                    "created": 1619080222164,
                                    "text": "开启数据包的反向地址校验，比如设置 net.ipv4.conf.eth0.rp_filter = 1"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cau41ia8gag0",
                            "created": 1619080231812,
                            "text": "从分片的角度出发，最主要的是调整 MTU"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cau41rcmyj40",
                            "created": 1619080251548,
                            "text": "从 ICMP 的角度出发"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau41rkf5qo0",
                                    "created": 1619080252019,
                                    "text": "你可以禁止 ICMP 协议，即设置 net.ipv4.icmp_echo_ignore_all = 1"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau41wjfz5s0",
                                    "created": 1619080262844,
                                    "text": "禁止广播 ICMP，即设置 net.ipv4.icmp_echo_ignore_broadcasts = 1"
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cau425cyeqw0",
                    "created": 1619080282043,
                    "text": "链路层"
                },
                "children": [
                    {
                        "data": {
                            "id": "cau42e8rz7k0",
                            "created": 1619080301381,
                            "text": "为网卡硬中断配置 CPU 亲和性（smp_affinity），或者开启 irqbalance 服务。"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cau42n75yk80",
                            "created": 1619080320875,
                            "text": "开启 RPS（Receive Packet Steering）和 RFS（Receive Flow Steering）\n将应用程序和软中断的处理，调度到相同 CPU 上"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cau439r3ufk0",
                            "created": 1619080369970,
                            "text": "网卡卸载"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau43bzon4g0",
                                    "created": 1619080374842,
                                    "text": "TSO（TCP Segmentation Offload）和 UFO（UDP Fragmentation Offload）"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau43kgtmu00",
                                    "created": 1619080393292,
                                    "text": "GSO（Generic Segmentation Offload）"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau43rpg2ts0",
                                    "created": 1619080409051,
                                    "text": "LRO（Large Receive Offload）"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau43xqvguw0",
                                    "created": 1619080422198,
                                    "text": "GRO（Generic Receive Offload）"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau441gz04g0",
                                    "created": 1619080430307,
                                    "text": "RSS（Receive Side Scaling）"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau442wz7ls0",
                                    "created": 1619080433451,
                                    "text": "VXLAN 卸载：也就是让网卡来完成 VXLAN 的组包功能"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cau44e40ic80",
                            "created": 1619080457821,
                            "text": "网络接口本身"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cau44f9u67k0",
                                    "created": 1619080460350,
                                    "text": "你可以开启网络接口的多队列功能"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau44mhw8zs0",
                                    "created": 1619080476075,
                                    "text": "你可以增大网络接口的缓冲区大小，以及队列长度等，提升网络传输的吞吐量"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cau44sufc9s0",
                                    "created": 1619080489893,
                                    "text": "使用 Traffic Control 工具，为不同网络流量配置 QoS"
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cau48fwtavs0",
                    "created": 1619080775196,
                    "text": "kernel bypass"
                },
                "children": [
                    {
                        "data": {
                            "id": "cau48mndnog0",
                            "created": 1619080789863,
                            "text": "DPDK"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cau48oksfk00",
                            "created": 1619080794060,
                            "text": "XDP"
                        },
                        "children": []
                    }
                ]
            }
        ]
    },
    "template": "right",
    "theme": "fresh-blue",
    "version": "1.4.43"
}